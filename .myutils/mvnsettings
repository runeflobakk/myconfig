#!/usr/bin/env bash

#
# Apache License 2.0 - http://www.apache.org/licenses/LICENSE-2.0.txt
#
# DISCLAIMER
# I have only tested this script on OS X, and it uses BASH features not
# available in versions prior to 4.2. (Newer BASH can be installed with
# for instance Homebrew - http://brew.sh)
# It should work on any *nix with BASH 4.2 or greater, though I cannot
# guarantie it. Any portability fixes are welcome!
#


if [[ ${BASH_VERSINFO[0]} < 4 || ${BASH_VERSINFO[1]} < 2 ]]; then
  echo "This script requires Bash version 4.2 or greater. You are using version ${BASH_VERSION}."
  exit 255
fi

m2dir="${HOME}/.m2"
actualSettings="${m2dir}/settings.xml"
defaultNewVariantName="default"

function variants {
  for settingsVariant in $(find ${m2dir} -depth 1 -type f -name "settings-*.xml"); do echo $(nameOf "$settingsVariant"); done
}

function markIfCurrent {
  if [[ "$1" == "$(currentVariant)" ]]; then echo -n "$* $(info \(*\))"
  else echo -n "$*"; fi
}

function nameOf {
  local settingsBasename=$(basename "$1")
  echo "${settingsBasename:9:-4}"
}

function currentVariant {
  if [[ -L "${actualSettings}" ]]; then echo $(nameOf $(readlink "${actualSettings}"))
  else echo ""; fi
}

function info {
  tput setaf 2; echo -n "$*"; tput sgr0
}

function error {
  tput setaf 1; echo -n "$*"; tput sgr0
}

function strong {
  tput bold; echo -n "$*"; tput sgr0
}

function underline {
  tput smul; echo -n "$*"; tput rmul
}

function gettingStarted {
  echo "There are no settings.xml variants available to choose from."

  echo -e "\nTo use mvnsettings you need to have at least 1 file containing any"
  echo "user-specific configuration for Maven, as described at"
  echo "$(underline http://maven.apache.org/settings.html), located in ${m2dir},"
  echo "and named as $(strong settings-variantname.xml). The $(strong variantname) part"
  echo "of the filename is recognized by mvnsettings to be included as a variant to"
  echo "choose from. You may have as many files following this naming scheme as you"
  echo "need, and they will all be available to mvnsettings to activate as your"
  echo "\"current\" settings.xml configuration."
}

function gettingStartedWithExistingSettings {
  echo -e "\nThe easiest way to start using mvnsettings is to rename your existing settings.xml"
  echo "to for instance settings-${defaultNewVariantName}.xml, and then run $(strong \"mvnsettings ${defaultNewVariantName}\") to"
  echo "activate it. This command will do exactly that:"
  echo " mv \"${actualSettings}\" \"${m2dir}/settings-${defaultNewVariantName}.xml\"; mvnsettings ${defaultNewVariantName}"
}

function gettingStartedFromScratch {
  echo -e "\nYou don't seem to have an existing settings.xml in ${m2dir}."
  echo "You can run $(strong mvnsettings --bootstrap [name]) to create a new settings variant."
  echo "The $(strong name) parameter is optional, and if given it will be the name of"
  echo "the settings.xml variant. Otherwise the name will be \"${defaultNewVariantName}\"."
}

function initialSettingsXml {
  echo '<settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"'
  echo '          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"'
  echo '          xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0'
  echo '                              http://maven.apache.org/xsd/settings-1.0.0.xsd">'
  echo '    <!-- see http://maven.apache.org/settings.html -->'
  echo '</settings>'
}



if [[ -z "$*" || "$1" == "-h" || "$1" == "--help" ]]; then
  echo -e "Choose which settings to use for Maven.\n"
  echo "$(strong Usage:)"
  echo -e "  $(basename $0) $(underline variant)"
  echo -e "  $(basename $0) --bootstrap $(underline variant)\n"
  if [[ ! -z "$(variants)" ]]; then
    echo "where $(underline variant) may be one of:"
    for name in $(variants); do echo " - $(markIfCurrent ${name})"; done
  else
    gettingStarted
    if [[ -f "${actualSettings}" ]]; then
      gettingStartedWithExistingSettings;
    else
      gettingStartedFromScratch
    fi
  fi
  exit 1
fi


if [[ "$1" == "--bootstrap" ]]; then
  variant="${2:-$defaultNewVariantName}"
  newSettings="${m2dir}/settings-${variant}.xml"
  if [[ -e "${newSettings}" ]]; then
    echo "$(error Unable to create new settings file, because this already exists:)"
    echo "${newSettings}"
    exit 1
  else
    initialSettingsXml > ${newSettings}
    echo "New settings variant is named $(underline ${variant})."
    echo "You can edit the file ${newSettings} to your own likings."
    echo "You can activate these settings with $(strong mvnsettings ${variant})"
  fi
  exit 0
else
  variant="$1"
fi




if [[ "${variant}" == "$(currentVariant)" ]]; then
  echo "\"${variant}\" is already active."
  exit 0
fi



previousSettings="${m2dir}/settings__backup__.xml"
newSettings="${m2dir}/settings-${variant}.xml"


if [[ ! -f "${newSettings}" ]]; then
  echo -e "$(error \"${variant}\" is not a valid settings variant.)\n"
  echo "Available variants:"
  for name in $(variants); do echo " - $(markIfCurrent ${name})"; done
  exit 1
fi


echo "Activating $(underline ${variant})..."

if [[ -z "$(currentVariant)" && -f "${actualSettings}" ]]; then
  echo "Current settings.xml is not managed by mvnsettings."
  if [[ -e "${m2dir}/settings-original.xml" ]]; then
    echo "$(error Not able to backup existing settings.xml \(${actualSettings}\))"
    echo "Please manually remove your current settings.xml in order to use mvnsettings."
    exit 1
  else
    mv "${actualSettings}" "${m2dir}/settings-original.xml" || exit 1
  fi
  echo "Your unmanaged settings.xml has been backed up, and"
  echo "you can restore it with the command $(strong mvnsettings original)."
elif [[ -f "${actualSettings}" ]]; then
  mv -f "${actualSettings}" "${previousSettings}"
fi


ln -s "${newSettings}" "${actualSettings}" || {
  echo "$(error Failed to link to ${newSettings})"
  mv "${previousSettings}" "${actualSettings}" 2> /dev/null && echo "Keeping \"$(currentVariant)\" as active Maven settings."
  exit 1
}


[[ -f "${previousSettings}" ]] && rm "${previousSettings}"
echo "$(strong ${newSettings}) is activated as settings.xml for Maven."
